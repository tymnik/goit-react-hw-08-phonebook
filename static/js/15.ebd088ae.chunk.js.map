{"version":3,"file":"static/js/15.ebd088ae.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Forms/ContactForm/ContactForm.module.css?983c","components/Forms/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","store/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputForm\":\"ContactForm_inputForm__xcc-6\",\"inputLabel\":\"ContactForm_inputLabel__DtvXl\",\"inputField\":\"ContactForm_inputField__wsNEl\",\"addBtn\":\"ContactForm_addBtn__u7Uv1\"};","import { useAuth } from 'hooks/useAuth';\nimport { useState } from 'react';\nimport { addContact } from 'store/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const { contacts } = useAuth();\n  const items = contacts || [];\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const addNewContact = e => {\n    e.preventDefault();\n\n    const isDuplicate = items.some(\n      existingContact =>\n        existingContact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isDuplicate) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      const newContact = {\n        name: name,\n        number: number,\n      };\n      dispatch(addContact(newContact));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') setName(value);\n    else if (name === 'number') setNumber(value);\n  };\n\n  return (\n    <form onSubmit={addNewContact} className={styles.inputForm}>\n      <label className={styles.inputLabel}>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          required\n          className={styles.inputField}\n        />\n      </label>\n      <label className={styles.inputLabel}>\n        Number:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          required\n          className={styles.inputField}\n        />\n      </label>\n      <button type=\"submit\" className={styles.addBtn}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactListItem_listItem__upGA2\",\"contactItemBlock\":\"ContactListItem_contactItemBlock__XWUFJ\",\"contactCreated\":\"ContactListItem_contactCreated__UdMrG\",\"callLink\":\"ContactListItem_callLink__VNaaB\",\"delBtn\":\"ContactListItem_delBtn__Mczr7\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'store/contacts/operations';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={styles.listItem}>\n      <div className={styles.contactItemBlock}>\n        {name}:{' '}\n        <a href={`tel:${number}`} className={styles.callLink}>\n          {number}\n        </a>{' '}\n      </div>\n      <button className={styles.delBtn} onClick={handleDeleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { createSelector } from 'reselect';\n\nconst selectContacts = state => state.contacts.items;\nconst selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().trim().includes(normalizedFilter) ||\n        number.trim().includes(normalizedFilter)\n    );\n    return filteredContacts;\n  }\n);\n","import React, { useEffect } from 'react';\nimport { useAuth } from 'hooks/useAuth';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport Loader from 'components/Loader/Loader';\nimport styles from './ContactList.module.css';\nimport { selectVisibleContacts } from '../../store/selectors';\nimport { fetchContacts } from 'store/contacts/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useAuth();\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={styles.contactList}>\n      {contacts.isLoading && <Loader />}\n      {filteredContacts.map(({ id, name, number, phone }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number || phone}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterForm\":\"Filter_filterForm__+l+6Q\",\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"inputField\":\"Filter_inputField__GiGjH\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from 'hooks/useAuth';\nimport { addFilter } from 'store/filter/slice';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n    const { filter } = useAuth();\n\n  const handleFilterChange = e => {\n    dispatch(addFilter(e.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <div className={styles.filterForm}>\n      <label className={styles.filterLabel}>\n        Find contacts by name or number:\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={handleFilterChange}\n          placeholder=\"Search...\"\n          className={styles.inputField}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/Forms/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <div>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["items","useAuth","contacts","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","value","_jsxs","onSubmit","preventDefault","some","existingContact","toLowerCase","alert","concat","newContact","addContact","className","styles","children","_jsx","type","onChange","required","_ref","id","href","onClick","deleteContact","selectVisibleContacts","createSelector","state","filter","normalizedFilter","trim","includes","useEffect","fetchContacts","filteredContacts","useSelector","isLoading","Loader","map","phone","ContactListItem","addFilter","placeholder","ContactForm","Filter","ContactList"],"sourceRoot":""}